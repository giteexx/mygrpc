// Code generated by goctl. DO NOT EDIT.
// Source: code.proto

package gateway

import (
	"context"

	"github.com/giteexx/mygrpc/api"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	ApiField     = api.ApiField
	BalanceReply = api.BalanceReply
	ChannelInfo  = api.ChannelInfo
	CodeReply    = api.CodeReply
	EmptyReply   = api.EmptyReply
	OrderField   = api.OrderField
	PhoneReply   = api.PhoneReply
	WayRequest   = api.WayRequest

	Gateway interface {
		GetBalance(ctx context.Context, in *WayRequest, opts ...grpc.CallOption) (*BalanceReply, error)
		UsePhone(ctx context.Context, in *WayRequest, opts ...grpc.CallOption) (*PhoneReply, error)
		GetPhone(ctx context.Context, in *WayRequest, opts ...grpc.CallOption) (*PhoneReply, error)
		GetCode(ctx context.Context, in *WayRequest, opts ...grpc.CallOption) (*CodeReply, error)
		CodeFeed(ctx context.Context, in *WayRequest, opts ...grpc.CallOption) (*EmptyReply, error)
		PhoneFeed(ctx context.Context, in *WayRequest, opts ...grpc.CallOption) (*EmptyReply, error)
		Rrelease(ctx context.Context, in *WayRequest, opts ...grpc.CallOption) (*EmptyReply, error)
	}

	defaultGateway struct {
		cli zrpc.Client
	}
)

func NewGateway(cli zrpc.Client) Gateway {
	return &defaultGateway{
		cli: cli,
	}
}

func (m *defaultGateway) GetBalance(ctx context.Context, in *WayRequest, opts ...grpc.CallOption) (*BalanceReply, error) {
	client := api.NewGatewayClient(m.cli.Conn())
	return client.GetBalance(ctx, in, opts...)
}

func (m *defaultGateway) UsePhone(ctx context.Context, in *WayRequest, opts ...grpc.CallOption) (*PhoneReply, error) {
	client := api.NewGatewayClient(m.cli.Conn())
	return client.UsePhone(ctx, in, opts...)
}

func (m *defaultGateway) GetPhone(ctx context.Context, in *WayRequest, opts ...grpc.CallOption) (*PhoneReply, error) {
	client := api.NewGatewayClient(m.cli.Conn())
	return client.GetPhone(ctx, in, opts...)
}

func (m *defaultGateway) GetCode(ctx context.Context, in *WayRequest, opts ...grpc.CallOption) (*CodeReply, error) {
	client := api.NewGatewayClient(m.cli.Conn())
	return client.GetCode(ctx, in, opts...)
}

func (m *defaultGateway) CodeFeed(ctx context.Context, in *WayRequest, opts ...grpc.CallOption) (*EmptyReply, error) {
	client := api.NewGatewayClient(m.cli.Conn())
	return client.CodeFeed(ctx, in, opts...)
}

func (m *defaultGateway) PhoneFeed(ctx context.Context, in *WayRequest, opts ...grpc.CallOption) (*EmptyReply, error) {
	client := api.NewGatewayClient(m.cli.Conn())
	return client.PhoneFeed(ctx, in, opts...)
}

func (m *defaultGateway) Rrelease(ctx context.Context, in *WayRequest, opts ...grpc.CallOption) (*EmptyReply, error) {
	client := api.NewGatewayClient(m.cli.Conn())
	return client.Rrelease(ctx, in, opts...)
}
